---
title: "Change in prey group proportions and contribution to total feeding ratio"
author: "Viktor Thunell & Max Lindmark"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: true
  eval: true
  cache: true
---

## Load libraries

```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools", "sdmTMB", "sdmTMBextra", "terra", "mapplots",
          "viridis", "visreg", "modelr", "future", "kableExtra", "ggh4x", "patchwork",
          "purrr", "furrr", "beepr") 

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){

    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

# Import some plotting functions
# Source code for map plots
# You need:
# devtools::install_github("seananderson/ggsidekick") # not on CRAN; library(ggsidekick)
devtools::source_url("https://raw.githubusercontent.com/VThunell/Lammska_cod-fr/main/R/functions/map-plot.R")
options(ggplot2.continuous.colour = "viridis")

library(ggsidekick)
theme_set(theme_sleek())

# Set path
home <- here::here()
```


## Read stomach data and prediction grid

```{r}
#| message: false
#| warning: false
#| cache: false

#df <- read_csv(paste0(home, "/data/clean/stom_env.csv")) |>
df <- readRDS(paste0(home, "/data/clean/stom_env_v1.rds")) |>
  mutate(depth_sc = (depth - mean(depth))/sd(depth),
         year_f = as.factor(year),
         month_f = as.factor(month),
         ices_rect = as.factor(ices_rect),
         pred_length_sc = (pred_length - mean(pred_length)) / sd(pred_length),
         doy_sc = ifelse(!is.na(day_of_year), (day_of_year - mean(day_of_year, na.rm = TRUE))/sd(day_of_year, na.rm = TRUE), NA)) |>
  rowwise() |> 
  mutate(tot = sum(other, other_inverts, other_chords, saduria, sprat, herring)
) |> ungroup()

glimpse(df)

#pred_grid <- readRDS(paste0(home, "/data/clean/pred_grid.rds"))
# pred_grid <- bind_rows(readRDS(paste0(home, "/data/clean/pred_grid_(1_2).rds")),
#                        readRDS(paste0(home, "/data/clean/pred_grid_(2_2).rds")))
# pred_grid <- bind_rows(read_csv(paste0(home, "/data/clean/pred_grid_(1_2)_max.csv")),
#                        read_csv(paste0(home, "/data/clean/pred_grid_(2_2)_max.csv")))

#plot_map +
 # geom_raster(data = pred_grid, aes(X*1000, Y*1000, fill = depth))

```

## Filter

```{r}

# remove empty stomachs and day of year that are NA.  0.27 is 99th percentile
q99 <- quantile(df$fr_tot, .99)
df_tot <- df |> 
  filter(fr_tot > 0 & fr_tot < q99)

# For env data model
df_tot_env <- df_tot |>
  mutate(decade = round(year/10) * 10,
         oxy_sc = (oxy - mean(oxy, na.rm = TRUE))/sd(oxy, na.rm = TRUE),
         sal_sc = (sal - mean(sal, na.rm = TRUE))/sd(sal, na.rm = TRUE),
         temp_sc = (temp - mean(temp, na.rm = TRUE))/sd(temp, na.rm = TRUE))

```

## Long format 
```{r}
df_long_env <- df_tot_env |>
  pivot_longer(cols = starts_with("fr") & !contains("tot"),  values_to = "value", names_to = "prey_group") |>
  filter(!prey_group == "fr_other") |> # needed to avoid ln_smooth_sigma too large and also not of interest and small
  mutate(prey_group_f = as.factor(prey_group),
         val_cube = value^(1/3),
         year_sc = (year - mean(year))/sd(year)) |>
  dplyr::select(prey_group_f, prey_group, value, val_cube, lat, lon, X, Y, year_sc, year, pred_length_sc, pred_length, doy_sc, depth_sc, sal_sc, temp_sc, oxy_sc)

str(df_long_env)

#df_long |>
df_long_env |>
  ggplot(aes(year, value)) +
  geom_point() +
  facet_wrap(~prey_group, scales = "free_y") +
 # stat_smooth(method = "gam", formula = y ~ s(x, k=3)) +
  expand_limits(x=c(1960,2020))
# 
#df_long |>
df_long_env |>
  summarise(mean = mean(value), .by = c(year, prey_group)) |>
  #filter(prey_group %in% c("fr_sad", "fr_spr", "fr_her")) |>
  ggplot(aes(year, mean, color = prey_group)) +
  geom_line() +
  facet_wrap(~prey_group) +
  expand_limits(x=c(1960,2020))

```

# Fit and check model

```{r Run and check env model}
df_long_env_s <- df_long_env |>
  slice_sample(n = 200000)

#make mesh
mesh_long <- make_mesh(df_long_env_s, c("X", "Y"), cutoff = 25)
plot(mesh_long)

# missing years
my <- min(df_long_env_s$year):max(df_long_env_s$year)
missing_years <- my[!my %in% unique(df_long_env_s$year)]
gc()

time <- Sys.time()
Mod_1d_test<-
  sdmTMB(
  data = df_long_env_s,
  mesh = mesh_long,
  formula = val_cube ~ 0 +
    prey_group_f +
    #s(pred_length_sc, year_sc, by = prey_group_f) +
    s(year_sc, by = prey_group_f) +
    s(pred_length_sc, by = prey_group_f) +
    s(doy_sc, bs = "cc") +
    depth_sc +
    sal_sc +
    temp_sc +
    oxy_sc,
  time = "year",
  extra_time = missing_years,
  spatial = "off",
  spatiotemporal = "off",
  spatial_varying = ~ 0 + prey_group_f,
  family = delta_lognormal(type = "poisson-link")
)
time - Sys.time()

# 2 dim
time <- Sys.time()
Mod_2d_test <-
  sdmTMB(
  data = df_long_env_s,
  mesh = mesh_long,
  formula = val_cube ~ 0 +
    prey_group_f +
    s(pred_length_sc, year_sc, by = prey_group_f) +
    #s(year_sc, by = prey_group_f) +
    #s(pred_length_sc, by = prey_group_f) +
    s(doy_sc, bs = "cc") +
    depth_sc +
    sal_sc +
    temp_sc +
    oxy_sc,
  time = "year",
  extra_time = missing_years,
  spatial = "off",
  spatiotemporal = "off",
  spatial_varying = ~ 0 + prey_group_f,
  family = delta_lognormal(type = "poisson-link")
)
Sys.time() - time

time <- Sys.time()
Mod_1d_iid_test <-
  sdmTMB(
  data = df_long_env_s,
  mesh = mesh_long,
  formula = val_cube ~ 0 +
    prey_group_f +
    #s(pred_length_sc, year_sc, by = prey_group_f) +
    s(year_sc, by = prey_group_f) +
    s(pred_length_sc, by = prey_group_f) +
    s(doy_sc, bs = "cc") +
    depth_sc +
    sal_sc +
    temp_sc +
    oxy_sc,
  time = "year",
  extra_time = missing_years,
  spatial = "off",
  spatiotemporal = "iid",
  spatial_varying = ~ 0 + prey_group_f,
  family = delta_lognormal(type = "poisson-link")
)
Sys.time() - time

time <- Sys.time()
tidy(Mod_1d_test)
time - Sys.time() 
time <- Sys.time()
tidy(Mod_2d_test)
time - Sys.time() 
time <- Sys.time()
tidy(Mod_1d_iid_test)
time - Sys.time() 

object.size(Mod_1d_test)/1000^2
object.size(Mod_2d_test)/1000^2
object.size(tidy(Mod_1d_iid_test))/1000^2

#saveRDS(Mod_1d_test, file = paste0(home, "/R/main-analysis/fr-pg_Mod_1d_test",Sys.Date(),".rds"))
#saveRDS(Mod_2d_test, file = paste0(home, "/R/main-analysis/fr-pg_Mod_2d_test",Sys.Date(),".rds"))

# predict on data
nd_Mod_test <- expand.grid("pred_length_sc" = seq(min(Mod_1d_test$data$pred_length_sc),
                                                   max(Mod_1d_test$data$pred_length_sc),
                                                   length.out =30), 
                            "prey_group_f" = levels(Mod_1d_test$data$prey_group_f),
                            "year_sc" = seq(min(Mod_1d_test$data$year_sc),
                                            max(Mod_1d_test$data$year_sc),
                                            length.out = length(unique(Mod_1d_test$data$year)))) 

nd_Mod_test <- nd_Mod_test |>
  mutate(depth_sc = 0,
         year = 1993,
         doy_sc = 0,
         depth_sc = 0,
         sal_sc = 0,
         temp_sc = 0,
         oxy_sc = 0)
         #density_cod_sc = 0)

gc()
time <- Sys.time()
preds1 <- predict(Mod_1d_test, newdata = nd_Mod_test, re_form = NA)
Sys.time() - time

gc()
time <- Sys.time()
preds2 <- predict(Mod_2d_test, newdata = nd_Mod_test, re_form = NA)
Sys.time() - time

gc()
time <- Sys.time()
preds3 <- predict(Mod_1d_iid_test, newdata = nd_Mod_test, re_form = NA)
Sys.time() - time

object.size(preds1)
object.size(preds2)
object.size(preds3)

 
# ## Plot coefficient estimates
# 1d
mfull_est1 <- tidy(Mod_1d_test, effects = "fixed", conf.int = TRUE)  %>%
                            filter(!grepl('year', term)) %>% 
  mutate(term = factor(term))

# 2d
mfull_est2 <- tidy(Mod_2d_test, effects = "fixed", conf.int = TRUE)  %>%
                            filter(!grepl('year', term)) %>%
  mutate(term = factor(term))

# iid
mfull_est3 <- tidy(Mod_1d_iid_test, effects = "fixed", conf.int = TRUE)  %>%
                            filter(!grepl('year', term)) %>%
  mutate(term = factor(term))

bind_rows(mfull_est1 |> mutate(model = "1d"), mfull_est2 |> mutate(model = "2d"), mfull_est3 |> mutate(model = "iid")) |>
 filter(term %in% c("sigma_E", "depth_sc", "sal_sc", "temp_sc", "oxy_sc", "density_cod_sc")) |>
ggplot(aes( estimate, term, color = model )) +
  geom_vline(xintercept = 0, linetype = 2, color = "gray40", alpha = 0.5) +
  geom_errorbar(aes(xmin = conf.low, xmax = conf.high), width = 0) +
  geom_point(size = 2.5) 

# Sum predictions on prey group fr to total fr
preds1b <- preds1 |>
  mutate(predd = exp(est1+est2),
         norm = (predd)/max(predd), .by = prey_group_f,
         year = year_sc*sd(df_tot_env$year) + mean(df_tot_env$year))
preds2b <- preds2 |>
  mutate(predd = exp(est1+est2),
         norm = (predd)/max(predd), .by = prey_group_f,
         year = year_sc*sd(df_tot_env$year) + mean(df_tot_env$year))
preds3b <- preds3 |>
  mutate(predd = exp(est1+est2),
         norm = (predd)/max(predd), .by = prey_group_f,
         year = year_sc*sd(df_tot_env$year) + mean(df_tot_env$year))

preds1b |>
  ggplot(aes(year_sc, pred_length_sc, fill = norm)) +
  geom_raster() +
  facet_wrap(~prey_group_f) +
  scale_fill_viridis(trans= "sqrt") +
  coord_cartesian(expand = 0) +

preds2b |>
  ggplot(aes(year_sc, pred_length_sc, fill = norm)) +
  geom_raster() +
  facet_wrap(~prey_group_f) +
  scale_fill_viridis(trans= "sqrt") +
  coord_cartesian(expand = 0) +

preds3b |>
  ggplot(aes(year_sc, pred_length_sc, fill = norm)) +
  geom_raster() +
  facet_wrap(~prey_group_f) +
  scale_fill_viridis(trans= "sqrt") +
  coord_cartesian(expand = 0)
```


```{r Run and check env model}
# 
# d <- read_csv(paste0(home, "/data/clean/catch_by_length.csv"))
# d <- d %>% 
#   filter(species == "cod") %>% 
#   filter(density > 0) %>% 
#   summarise(lwr = quantile(length_cm, prob = 0.25),
#             median = quantile(length_cm, prob = 0.5),
#             upr = quantile(length_cm, prob = 0.75),
#             .by = year) %>% 
#   pivot_longer(-year) 
# 

preygroups <- c(
  fr_her = "Herring",
  fr_sad = "Saduria entomon",
  fr_spr = "Sprat",
  fr_other_chords = "Other fish",
  fr_other_inverts = "Other invertebrates",
  fr_tot = "Total"
)

preds2b |>
#  filter(between(pred_length, 10, 60)) |>
  #mutate(norm = (predd)/max(predd), .by = prey_group_f) |>
  ggplot() +
  geom_raster(aes(year, pred_length_sc, fill = norm)) +
  #geom_line(data = d, aes(year, value, linetype = name)) +
  facet_wrap(~prey_group_f, labeller = labeller(prey_group_f = preygroups)) +
  scale_fill_viridis(trans= "sqrt") +
  scale_x_continuous(breaks = seq(1960, 2020, by=10)) +
  #scale_y_continuous(breaks = seq(15, 55, by=10)) +
  labs(fill = "Max. scaled fr value", linetype = "Catch length IQR",
       y = "Cod length", x = "Year") +
  coord_cartesian(expand = 0)
#   
# ggsave(paste0(home, "/figures/main/2d_year_predlength.pdf"), width = 25, height = 15, units = "cm")
# 
# # gc()
# Mod_2denv_iid1 <-
#   sdmTMB(
#   data = df_long_env,
#   mesh = mesh_long,
#   formula = val_cube ~ 0 +
#     prey_group_f +
#     s(pred_length_sc, year_sc, by = prey_group_f) +
#     s(doy_sc, bs = "cc") +
#     depth_sc +
#     sal_sc +
#     temp_sc +
#     oxy_sc,
#     #density_cod_sc,
#   time = "year",
#   extra_time = missing_years,
#   spatial = "off",
#   spatiotemporal = "iid",
#   spatial_varying = ~ 0 + prey_group_f,
#   family = delta_lognormal(type = "poisson-link")
#   #family = delta_lognormal(type = "standard")
#   #family = tweedie()
# )
# time - Sys.time()
# object.size(Mod_2denv_iid1)/1000^2
# # gc()
# saveRDS(Mod_2denv_iid1, file = paste0(home, "/R/main-analysis/fr-pg_Mod_2ds_env",Sys.Date(),".rds"))

#saveRDS(Mod_2denv_iid1, file = paste0(home, "/R/main-analysis/fr-pg_Mod_2ds_enviid",Sys.Date(),".rds"))
#Mod_2denv <- readRDS(file = paste0(home, "/R/main-analysis/fr-pg_Mod_2ds_env2024-09-24.rds"))
#Mod_2denv
#Mod_2denv <- readRDS(file = paste0(home, "/R/main-analysis/fr-pg_Mod_2ds_enviid2024-09-16.rds"))
#Mod_2denv <- readRDS(file = paste0(home, "/R/main-analysis/fr-pg_Mod_2ds_env2024-06-17.rds"))
# Mod_2denv
# # saveRDS(Mod_2denv, file = paste0(home, "/R/main-analysis/fr-pg_Mod_2ds_env",Sys.Date(),".rds"))
# # Mod_2denv <- readRDS(file = paste0(home, "/R/main-analysis/fr-pg_Mod_2ds_env2024-06-17.rds"))
#Mod_2denv
# 
# sdmTMB::predict(Mod_2denv_iid1)
# 
# sanity(Mod_2denv_iid1_yesx)
# sanity(Mod_2denv_iid1_x)
# Mod_res2 <- residuals(Mod_2denv_ar1, model = 2)
# Mod_res1 <- residuals(Mod_2denv_ar1, model = 1)
# # 12% infinite residual values in model 1 
# sum(!is.finite(Mod_res1))/length(Mod_res1)
# stats::qqnorm(Mod_res1)
# stats::qqline(Mod_res1)
# stats::qqnorm(Mod_res2)
# stats::qqline(Mod_res2)
# 

# tidy(Mod_2denv, effects = "fixed", model = 2, conf.int = TRUE, exponentiate = TRUE) %>%
#                          filter(term %in% c("sigma_O", "sigma_E"))
# object.size(Mod_2denv)
# object.size(Mod_2denv_iid2)
# object.size(Mod_2denv_iid3) 
# object.size(Mod_2denv_iid2) /object.size(Mod_2denv) # 30% off
# object.size(Mod_2denv_iid3) /object.size(Mod_2denv) # 30% off

time <- Sys.time()
#Mod_2denv
time - Sys.time() # R crash

```

# Coefficient estimates
```{r coeff est}


saveRDS(Mod_1denv, file = paste0(home, "/R/main-analysis/fr-pg_Mod_1denv_test",Sys.Date(),".rds"))
saveRDS(Mod_2denv, file = paste0(home, "/R/main-analysis/fr-pg_Mod_2denv_test",Sys.Date(),".rds"))
gc()
time <- Sys.time()
tidy(Mod_2denv_iid3)
time - Sys.time() # that 2 minutes
Mod_2denv <- Mod_2denv_iid3
## Plot coefficient estimates

# Binomial model (1)
# Extract random and fixed coefficients from the full model and continous part
mfull_est1 <- bind_rows(tidy(Mod_2denv, effects = "ran_par", model = 1, conf.int = TRUE) %>%
                         filter(term %in% c("sigma_O", "sigma_E")),
                       tidy(Mod_2denv, effects = "fixed", model = 1, conf.int = TRUE)  %>%
                         filter(!grepl('year', term))) %>%

  mutate(term = factor(term))

# Sort the terms so that random effects are at the top...
mfull_est1 <- mfull_est1 %>%
  mutate(term2 = ifelse(term %in% c("sigma_E", "sigma_O"), 2, 1),
         model = "binomial")

# Lognormal model (2)
mfull_est2 <- bind_rows(tidy(Mod_2denv, effects = "ran_par", model = 2, conf.int = TRUE) %>%
                         filter(term %in% c("sigma_O", "sigma_E")),
                       tidy(Mod_2denv, effects = "fixed", model = 2, conf.int = TRUE)  %>%
                         filter(!grepl('year', term))) %>%

  mutate(term = factor(term))

# Sort the terms so that random effects are at the top...
mfull_est2 <- mfull_est2 %>%
  mutate(term2 = ifelse(term %in% c("sigma_E", "sigma_O"), 2, 1),
         model = "lognormal")

bind_rows(mfull_est2, mfull_est1) |>
 filter(term %in% c("sigma_E", "depth_sc", "sal_sc", "temp_sc", "oxy_sc", "density_cod_sc")) |>
ggplot(aes( estimate, reorder(term, term2), color = model)) +
  geom_vline(xintercept = 0, linetype = 2, color = "gray40", alpha = 0.5) +
  geom_errorbar(aes(xmin = conf.low, xmax = conf.high), width = 0) +
  geom_point(size = 2.5) +
  labs(y = "Estimate", x = "Standardized coefficient")

#Mod_2denv <- Mod_2denv_iid1
nd_Mod2d_env <- expand.grid("pred_length_sc" = seq(min(Mod_2denv$data$pred_length_sc),
                                                   max(Mod_2denv$data$pred_length_sc),
                                                   length.out =30), 
                            "prey_group_f" = levels(Mod_2denv$data$prey_group_f),
                            "year_sc" = seq(min(Mod_2denv$data$year_sc),
                                            max(Mod_2denv$data$year_sc),
                                            length.out = length(unique(Mod_2denv$data$year))-1 )) 
#, "year" = sort(unique(Mod_2denv$data$year)))

nd_Mod2d_env <- nd_Mod2d_env |>
  mutate(depth_sc = 0,
         year = 1993,
         doy_sc = 0,
         depth_sc = 0,
         sal_sc = 0,
         temp_sc = 0,
         oxy_sc = 0)
         #density_cod_sc = 0)
time <- Sys.time()
preds <- predict(Mod_2denv, newdata = nd_Mod2d_env, re_form = NA)
Sys.time() - time
# preds <- unique(nd_Mod2d_env$year_sc) |>
#   map(\(y) {
#     nd <- nd_Mod2d_env |> filter(year_sc == y)
#     p <- predict(Mod_2denv, newdata = nd, re_form = NA)
# }, .progress = TRUE)
# Sys.time() - time

preds <- preds |> # for clarity of possion link theory
  mutate(n = exp(est1), # numbers density
         w = exp(est2), # weight per group
         p = 1 - exp(-n), # bernoulli
         r = (n * w) / p, # continuous catch rate
         predd = p*r) # additive in link space, equal to n*w.
   
# Sum predictions on prey group fr to total fr
preds2 <- preds |>
  mutate(norm = (predd)/max(predd), .by = prey_group_f,
         year = year_sc*sd(df_long_env$year) + mean(df_long_env$year),
         pred_length = pred_length_sc *sd(df_long_env$pred_length) + mean(df_long_env$pred_length)) |>
  dplyr::select(year, pred_length, year_sc, pred_length_sc, prey_group_f, predd) |>
  group_split(year, pred_length) |>
  map_dfr(~ add_row(.x, year = first(.x$year), 
                    pred_length = first(.x$pred_length), 
                    prey_group_f = "fr_tot", 
                    predd = sum(.x$predd)))

preds2$prey_group_f<-fct_relevel(preds2$prey_group_f, "fr_her","fr_spr", "fr_sad","fr_other_chords","fr_other_inverts","fr_tot") 

preds2 |> 
  ggplot(aes(year_sc, pred_length_sc, fill = exp(est1+est2))) + 
  geom_raster() +
  facet_wrap(~prey_group_f) +
  #scale_fill_viridis(trans= "sqrt") +
  coord_cartesian(expand = 0)

d <- read_csv(paste0(home, "/data/clean/catch_by_length.csv"))
d <- d %>% 
  filter(species == "cod") %>% 
  filter(density > 0) %>% 
  summarise(lwr = quantile(length_cm, prob = 0.25),
            median = quantile(length_cm, prob = 0.5),
            upr = quantile(length_cm, prob = 0.75),
            .by = year) %>% 
  pivot_longer(-year) 

preygroups <- c(
  fr_her = "Herring",
  fr_sad = "Saduria entomon",
  fr_spr = "Sprat",
  fr_other_chords = "Other fish",
  fr_other_inverts = "Other invertebrates",
  fr_tot = "Total"
)

preds2 |>
  filter(between(pred_length, 10, 60)) |>
  mutate(norm = (predd)/max(predd), .by = prey_group_f) |>
  ggplot() + 
  geom_raster(aes(year, pred_length, fill = predd)) +
  geom_line(data = d, aes(year, value, linetype = name)) +
  facet_wrap(~prey_group_f, labeller = labeller(prey_group_f = preygroups)) +
  scale_fill_viridis(trans= "sqrt") +
  scale_x_continuous(breaks = seq(1960, 2020, by=10)) +
  #scale_y_continuous(breaks = seq(15, 55, by=10)) +
  labs(fill = "Max. scaled fr value", linetype = "Catch length IQR", 
       y = "Cod length", x = "Year") +
  coord_cartesian(expand = 0)
  
ggsave(paste0(home, "/figures/main/2d_year_predlength.pdf"), width = 25, height = 15, units = "cm")


```


## Predict from the large model object

```{r}
# nd_pred_grid <- pred_grid |>
#   filter(year > 2020 ) |>
#   #filter(year %in% c(2015:2018) ) |>
#   mutate(depth_sc = (depth - mean(df_tot$depth))/sd(df_tot$depth),
#          doy_sc = 0,
#          pred_length_sc = 0)
# 
ncells <- filter(nd_pred_grid, year == max(nd_pred_grid$year)) |> nrow()


# # This works, roughly 1 hour per year. But I dont need map really since im just doing one year at a time.
# time <- proc.time()
# ps = data.frame()
# for (i in 1990:2022) {
# 
#   nd_pred_grid <- pred_grid |>
#   filter( year %in% i ) |>
#   mutate(depth_sc = (depth - mean(df_tot$depth))/sd(df_tot$depth),
#          doy_sc = 0,
#          pred_length_sc = 0)
# 
#   prdi <- nd_pred_grid |>
#       split(nd_pred_grid$year) |>
#       map(\(nd) predict(Mod, newdata = nd, return_tmb_object = TRUE))
# 
#   irdi <- prdi |>
#       map(\(x) get_index(x, area = 1/ncells, bias_correct = TRUE)) |>
#     #future_map(\(pr) get_index(pr, area = 1/ncells, bias_correct = TRUE)) |>
#       list_rbind()#lmap(get_index, area = 1/ncells, bias_correct = TRUE)
# # for two consequitive years, the predictions take 180 sec and the index 5500 sec.
# 
# ps <- bind_rows(ps,irdi) # ad
# 
# # for (i in 1:n) {
# #     # ... make some data
# #     dat <- data.frame(x = rnorm(10), y = runif(10))
# #     dat$i <- i  # maybe you want to keep track of which iteration produced it?
# #     datalist[[i]] <- dat # ad
#   gc()
# }
# 
# proc.time() - time
# 
# 
# time <- proc.time()
# ps = data.frame()
# for (i in 1963:2022) {
# 
#   nd_pred_grid <- pred_grid |>
#   filter( year %in% i ) |>
#   mutate(depth_sc = (depth - mean(df_tot$depth))/sd(df_tot$depth),
#          doy_sc = 0,
#          pred_length_sc = 0)
# 
#   prdi <- predict(Mod_n, newdata = nd_pred_grid, return_tmb_object = TRUE)
#   irdi <- get_index(prdi, area = 1/ncells, bias_correct = TRUE)
#   ps <- bind_rows(ps,irdi) 
#   gc()
# }
# 
# proc.time() - time
# 
# # # model n
# # time <- Sys.time()
# # index_n <- map_dfr(unique(nd_pred_grid$year), \(y) { # backslash means function
# #   nd <- nd_pred_grid |> filter( year == y )
# #   p <- predict(Mod_n, newdata = nd, return_tmb_object = TRUE)
# #   get_index(p, area = 1/ncells, bias_correct = TRUE)
# # })
# # Sys.time() - time
# # 
# # time <- Sys.time()
# # plan(multisession, workers = 4)
# # index_n <- future_map_dfr(unique(nd_pred_grid$year), \(y) { # backslash means function
# #   nd <- nd_pred_grid |> filter( year == y )
# #   p <- predict(Mod_n, newdata = nd, return_tmb_object = TRUE)
# #   get_index(p, area = 1/ncells, bias_correct = TRUE)
# # })
# # plan(sequential)
# # Sys.time() - time
# # # 
# # 
# # ncells <- filter(nd_pred_grid, year == max(nd_pred_grid$year)) |> nrow()
# # 
# # 
# # pred_Mod <- predict(Mod_n, newdata = nd_pred_grid, return_tmb_object = TRUE) # TRUE returns a report from TMB in the 
# # index <- get_index(Pred_Mod, area = rep(1/ncells, nrow(Pred_Mod$data)), bias_correct = TRUE)
```

## Effects of predator length over time
```{r predict plot 2d smooth}


#pred2d = predict(Mod_2denv, re_form = NA)

#Mod_2denv <- Mod_2denv_iid1
nd_Mod2d_env <- expand.grid("pred_length_sc" = seq(min(Mod_2denv$data$pred_length_sc),
                                                   max(Mod_2denv$data$pred_length_sc),
                                                   length.out = 20), 
                            "prey_group_f" = levels(Mod_2denv$data$prey_group_f),
                            "year_sc" = seq(min(Mod_2denv$data$year_sc),
                                            max(Mod_2denv$data$year_sc),
                                            length.out = length(unique(Mod_2denv$data$year))-1 )) 
#, "year" = sort(unique(Mod_2denv$data$year)))

nd_Mod2d_env <- nd_Mod2d_env |>
  mutate(depth_sc = 0,
         year = 1993,
         doy_sc = 0,
         depth_sc = 0,
         sal_sc = 0,
         temp_sc = 0,
         oxy_sc = 0)
         #density_cod_sc = 0)

time <- Sys.time()
preds <- unique(nd_Mod2d_env$year_sc) |>
  map(\(y) {
    nd <- nd_Mod2d_env |> filter(year_sc == y)
    p <- predict(Mod_2denv, newdata = nd, re_form = NA)
}, .progress = TRUE)
Sys.time() - time
  
time <- Sys.time()
yp = data.frame()
pgp = data.frame()
for (i in unique(nd_Mod2d_env$year_sc)) {

  for (j in unique(nd_Mod2d_env$prey_group_f)) {
  nd_pred_grid = nd_Mod2d_env |>
  filter( year_sc %in% i & prey_group_f %in% j) ##|>
  
  prdi = predict(Mod_2denv, newdata = nd_pred_grid, re_form = NA)
  pgp = rbind(pgp, prdi)
  
  gc()
  }
    yp = rbind(yp, pgp)
  }
Sys.time() - time
#   irdi <- prdi |>
#       map(\(x) get_index(x, area = 1/ncells, bias_correct = TRUE)) |>
#     #future_map(\(pr) get_index(pr, area = 1/ncells, bias_correct = TRUE)) |>
#       list_rbind()#lmap(get_index, area = 1/ncells, bias_correct = TRUE)
# # for two consequitive years, the predictions take 180 sec and the index 5500 sec.


time <- proc.time()
#plan(multisession, workers = 2)
unique(Mod_2denv$data$year_sc)
ind <- nd_Mod2d_env |>
  filter(year_sc %in% unique(Mod_2denv$data$year_sc)[1:5]) |>
  split(nd_Mod2d_env$year_sc) |>
  map(\(nd) predict(Mod_2denv, newdata = nd, re_form = NA)) |>
  #map(\(pr) get_index(pr, area = 1/ncells, bias_correct = TRUE)) |>
  list_rbind()
#plan(sequential)
Sys.time() - time


nd_Mod2d_env <- expand.grid("pred_length_sc" = seq(min(Mod_2denv$data$pred_length_sc),
                                                   max(Mod_2denv$data$pred_length_sc),
                                                   length.out = 30), 
                            "prey_group_f" = levels(Mod_2denv$data$prey_group_f),
                            "year_sc" = seq(min(Mod_2denv$data$year_sc),
                                            max(Mod_2denv$data$year_sc),
                                            length.out = length(unique(Mod_2denv$data$year))-1 )) 
#, "year" = sort(unique(Mod_2denv$data$year)))

nd_Mod2d_env <- nd_Mod2d_env |>
  mutate(depth_sc = 0,
         year = 2010,
         doy_sc = 0,
         depth_sc = 0,
         sal_sc = 0,
         temp_sc = 0,
         oxy_sc = 0,
         density_cod_sc = 0)

pred2d = predict(Mod_2denv_iid1, newdata = nd_Mod2d_env, re_form = NA)
#saveRDS(pred2d, file = paste0(home, "/R/main-analysis/fr-pg_Mod_2ds_noenv",Sys.Date(),".rds"))

preds <- preds |> # for clarity of possion link theory
  mutate(n = exp(est1), # numbers density
         w = exp(est2), # weight per group
         p = 1 - exp(-n), # bernoulli
         r = (n * w) / p, # continuous catch rate
         predd = p*r) # additive in link space, equal to n*w.
   
# Sum predictions on prey group fr to total fr
pred2d3 <- pred2d2 |>
  mutate(norm = (predd)/max(predd), .by = prey_group_f,
         year = year_sc*sd(df_long_env$year) + mean(df_long_env$year),
         pred_length = pred_length_sc *sd(df_long_env$pred_length) + mean(df_long_env$pred_length)) |>
  dplyr::select(year, pred_length, year_sc, pred_length_sc, prey_group_f, predd) |>
  group_split(year, pred_length) |>
  map_dfr(~ add_row(.x, year = first(.x$year), 
                    pred_length = first(.x$pred_length), 
                    prey_group_f = "fr_tot", 
                    predd = sum(.x$predd)))

pred2d3$prey_group_f<-fct_relevel(pred2d3$prey_group_f, "fr_her","fr_spr", "fr_sad","fr_other_fish","fr_other_invert","fr_tot") 

pred2d2 |> 
  ggplot(aes(year_sc, pred_length_sc, fill = exp(est1+est2))) + 
  geom_raster() +
  facet_wrap(~prey_group_f) +
  #scale_fill_viridis(trans= "sqrt") +
  coord_cartesian(expand = 0)

d <- read_csv(paste0(home, "/data/clean/catch_by_length.csv"))
d <- d %>% 
  filter(species == "cod") %>% 
  filter(density > 0) %>% 
  summarise(lwr = quantile(length_cm, prob = 0.25),
            median = quantile(length_cm, prob = 0.5),
            upr = quantile(length_cm, prob = 0.75),
            .by = year) %>% 
  pivot_longer(-year) 

preygroups <- c(
  fr_her = "Herring",
  fr_sad = "Saduria entomon",
  fr_spr = "Sprat",
  fr_other_fish = "Other fish",
  fr_other_invert = "Other invertebrates",
  fr_tot = "Total"
)

pred2d3 |>
  filter(between(pred_length, 10, 60)) |>
  mutate(norm = (predd)/max(predd), .by = prey_group_f) |>
  ggplot() + 
  geom_raster(aes(year, pred_length, fill = predd)) +
  geom_line(data = d, aes(year, value, linetype = name)) +
  facet_wrap(~prey_group_f, labeller = labeller(prey_group_f = preygroups)) +
  scale_fill_viridis(trans= "sqrt") +
  scale_x_continuous(breaks = seq(1995, 2020, by=5)) +
  scale_y_continuous(breaks = seq(15, 55, by=10)) +
  labs(fill = "Max. scaled fr value", linetype = "Catch length IQR", 
       y = "Cod length", x = "Year") +
  coord_cartesian(expand = 0)
  
ggsave(paste0(home, "/figures/main/2d_year_predlength.pdf"), width = 25, height = 15, units = "cm")


# make_plot <- function(data, vars)  {
#   data |>
#     mutate(year = year_sc *sd(df_long$year) + mean(df_long$year),
#            pred_length = pred_length_sc *sd(df_tot$pred_length) + mean(df_tot$pred_length)) |>
#     filter(prey_group_f == vars) |>
#     ggplot(aes(year, pred_length, fill = n*w)) +
#     #ggplot(aes(year_sc, pred_length_sc, fill = r)) +
#     #ggplot(aes(year, pred_length, fill = p)) +
#     geom_raster() +
#     scale_fill_viridis(trans = "sqrt") +
#     labs(title = vars) +
#     theme(legend.position = "bottom")
# }
# 
# plots <- levels(df_long$prey_group_f) |>
#   map(~ make_plot(pred2d2, .x))    
# patchwork::wrap_plots(plots) + plot_layout(axes = "collect")#, guides = "collect")
```

# Total feeding ratio per prey group over time
```{r total oer time}

ndyear_Mod2d_env <- 
  expand.grid("prey_group_f" = levels(Mod_2denv$data$prey_group_f),
              "year_sc" = seq(min(Mod_2denv$data$year_sc),
                          max(Mod_2denv$data$year_sc),
                          length.out = length(unique(Mod_2denv$data$year))+1)) |>
  mutate(depth_sc = 0,
         pred_length_sc = 0,
         year = 2007,
         doy_sc = 0,
         depth_sc = 0,
         sal_sc = 0,
         temp_sc = 0,
         oxy_sc = 0,
         density_cod_sc = 0)

time <- proc.time()
ps = data.frame()

for (i in unique(ndyear_Mod_2denv$year_sc)) {

  nd_pred_grid <- nd_Mod2d_env |>
  filter( year_sc %in% i ) ##|>
  
  prdi = predict(Mod_2denv, newdata = nd_pred_grid, return_tmb_object = TRUE)
  gc()
  
  ret = rbind(ps, prdi)
  }
proc.time() - time
#   irdi <- prdi |>



year_pred2d = predict(Mod_2denv, newdata = ndyear_Mod2d_env, re_form = NA, se_fit = TRUE)

year_pred2d2 <- year_pred2d |>
  mutate(predd = exp(est1 + est2),
         year = year_sc*sd(df_long_env$year) + mean(df_long_env$year)) |>
  dplyr::select(year_sc, year, prey_group_f, predd) |>
  group_split(year_sc) |>
  map_dfr(~ add_row(.x, year_sc = first(.x$year_sc), 
                    prey_group_f = "fr_tot", 
                    year = first(.x$year),
                    predd = sum(.x$predd)))

frv <- 
year_pred2d2 |>
  filter(!prey_group_f=="fr_tot") |>
  summarise(tot = predd, .by = c(year, prey_group_f)) |> # 30 is pred_length groups in predict
  ggplot(aes(year, tot, color = prey_group_f)) + 
  geom_line(show.legend = FALSE) +
  geom_line(data = year_pred2d2 |> filter(prey_group_f=="fr_tot"), aes(year, predd, color = "total"), color = "grey", linetype = "dashed") +
  #geom_ribbon(aes(ymin = exp(est-1.96*est_se)^2, ymax = exp(est+1.96*est_se)^2), color = NA, alpha = 0.3) +
  scale_color_discrete(labels = preygroups) +
  scale_x_continuous(breaks = seq(1995, 2020, by=5)) +
  labs(color = "Prey", y = "fr value", x = "Year")

prop <- year_pred2d2 |>
  filter(!prey_group_f=="fr_tot") |>
  mutate(tot = sum(predd), .by = year) |>
  mutate(prop = predd / tot, .by = c(prey_group_f, year_sc)) |>
  ggplot(aes(year, prop, fill = prey_group_f)) +
  geom_area() +
  scale_fill_discrete(labels = preygroups) +
  scale_x_continuous(breaks = seq(1995, 2020, by=5)) +
  labs(fill = "Prey", y = "Proportion", x = "Year", title = "grey dashed is total") +
  coord_cartesian(expand = 0)
  
frv + prop + plot_layout(axes = "collect", guides = "collect")

ggsave(paste0(home, "/figures/main/2d_year_frandprop.pdf"), width = 25, height = 15, units = "cm")

```

```{r predict on grid}
#| cache: FALSE

nd_pred_grid <- pred_grid |>
  drop_na() |>
  mutate(depth = ifelse(depth < 0, 0, depth),
         depth_sc = (depth - mean(df_long_env$depth))/sd(df_long_env$depth),
         pred_length_sc = 0,
         year_sc = (year - mean(df_long_env$year))/sd(df_long_env$year),
         doy_sc = 0,
         sal_sc = (sal - mean(df_long_env$sal))/sd(df_long_env$sal),
         temp_sc = (temp - mean(df_long_env$temp))/sd(df_long_env$temp),
         oxy_sc = (oxy - mean(df_long_env$oxy))/sd(df_long_env$oxy),
         density_cod_sc = 0)

# add prey groupd to pred grid
nd_pred_grid <- replicate_df(nd_pred_grid, "prey_group_f",
                             unique(df_long_env$prey_group_f))
                             
#temp_pred2d <- predict(Mod_2denv, newdata = nd_pred_grid, return_tmb_object = TRUE)
#saveRDS(temp_pred2d, file = paste0(home, "/R/main-analysis/fr-pg_temp_pred2d",Sys.Date(),".rds"))
temp_pred2d <- readRDS(file = paste0(home, "/R/main-analysis/fr-pg_temp_pred2d2024-06-24.rds"))

# ncells <- filter(nd_pred_grid, year == max(nd_pred_grid$year)) |> nrow() # for average index
# 
# time <- Sys.time()
# index_n <- get_index(temp_pred2d, area = 1/ncells, bias_correct = TRUE)
# Sys.time() - time
#
#   geom_line(data = index_tot |> filter(year > 1992), aes(year, est), color = "black") + 
#   labs(subtitle = "black is index from the other model")
# 
# index_tot <- readRDS(paste0(home, "/R/main-analysis/index_st_Mod_ar1_sq2024-05-14.rds"))
# oneandtwo <- pred2d3 |>
#   filter(!prey_group_f == "fr_tot") |>
#   summarise(tot = sum(predd)/30, .by = c(year)) |> # 30 is pred_length groups in predict
#   ggplot(aes(year, tot)) + 
#   geom_line() +
#   geom_line(index_tot |> filter(year > 1992), aes(year, est))
#   

```

## Map of spatiotemporal random fields

```{r}
tv <- temp_pred2d$data
plotdf <- temp_pred2d$data |>
  mutate(decade = round(year/10) * 10) |>
  mutate(dec_mean_eps = mean(epsilon_st1+epsilon_st2, na.omit = TRUE), .by =
  c(decade, prey_group_f, X, Y)) #random spatial and spatiotemporal
  
plot_map_fc +
  #geom_raster(data = plotdf, aes(X*1000, Y*1000, fill = epsilon_st1+epsilon_st2)) +
  geom_raster(data = plotdf, aes(X*1000, Y*1000, fill = epsilon_st1+epsilon_st2)) +
  #geom_raster(data = plotdf, aes(X*1000, Y*1000, fill = dec_mean_eps)) +
  #facet_grid(prey_group_f~year) +#, labeller = labeller(prey_group_f = preygroups)) +
  facet_wrap(~year, ncol=5) +
  theme_sleek(base_size = 6) +
  geom_sf() +
  scale_fill_viridis() #+
#  labs( title = "Decadal mean spatiotemporal random effects")

```

